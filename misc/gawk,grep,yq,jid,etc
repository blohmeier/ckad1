SUMMARY:

k explain po.spec
k explain pod --recursive |  awk '/^[ ]{3,6}[[:alpha:]]/'
awk '{print $<col#>}' | awk 'NR!=1' 
k get clusterrolebindings -A | awk '{printf $2FS$3; print NL}'
k get pod pod1 -o jsonpath="{.status.phase}"

OR combine for fuller picture:
k explain po.spec | awk '/^[ ]{3,4}[[:alpha:]]/'
k explain deploy.spec.template.spec | awk '/^[ ]{3,4}[[:alpha:]]/'

Manipulate output:

Get sense of manifest file indentation for rare objects (e.g. for PODS: readinessProbe, serviceAccountName. for DEPLOY: allowPrivilegeEscalation, privileged):
k explain pod --recursive |  awk '/^[ ]{3,6}[[:alpha:]]/'
MORE DETAIL:
k explain deployments.spec.template.spec.containers.securityContext --recursive
KIND:     Deployment
VERSION:  apps/v1

RESOURCE: securityContext <Object>

DESCRIPTION:
     SecurityContext defines the security options the container should be run
     with. If set, the fields of SecurityContext override the equivalent fields
     of PodSecurityContext. More info:
     https://kubernetes.io/docs/tasks/configure-pod-container/security-context/

     SecurityContext holds security configuration that will be applied to a
     container. Some fields are present in both SecurityContext and
     PodSecurityContext. When both are set, the values in SecurityContext take
     precedence.

FIELDS:
   allowPrivilegeEscalation     <boolean>
   capabilities <Object>
      add       <[]string>
      drop      <[]string>
   privileged   <boolean>
   procMount    <string>
   readOnlyRootFilesystem       <boolean>
   runAsGroup   <integer>
   runAsNonRoot <boolean>
   runAsUser    <integer>
   seLinuxOptions       <Object>
      level     <string>
      role      <string>
      type      <string>
      user      <string>
   seccompProfile       <Object>
      localhostProfile  <string>
      type      <string>
   windowsOptions       <Object>
      gmsaCredentialSpec        <string>
      gmsaCredentialSpecName    <string>
      hostProcess       <boolean>
      runAsUserName     <string>

grab column in tab separated list | remove first row:
awk '{print $<col#>}' | awk 'NR!=1' 

Print selected columns; with line break
k get clusterrolebindings -A | awk '{printf $2FS$3; print NL}'

grab from json
k get pod pod1 -o jsonpath="{.status.phase}" > /opt/course/2/pod1-status-command.sh

grap from yaml
k get pod holy-api-7bbc86b7b5-2x9xx -o yaml > sample3.yaml
yq e '.status.podIP' sample3.yaml
10.44.0.74

jid (!!!)
sudo apt-get install jid
k get po -o json | jid -q
